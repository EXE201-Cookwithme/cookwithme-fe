import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

import { toast, Toaster } from "sonner";
import ReactQueryProvider from "@/react-query";
import { cookies } from "next/headers";
import { UserBe } from "@/constants/types";
import UserProvider from "@/providers/UserProvider";
import Chatbot from "@/components/chatbot";
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Cookwithme App",
  description: "Generated by create next app",
};
const fetchUserByToken = async (token: string) => {
  try {
    const fetchData = await fetch(`${process.env.NEXT_PUBLIC_BE}/user`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
    });
    const res = await fetchData.json();
    return res.data;
  } catch (e) {
    console.log(e);
    toast.error("Error fetching user by token");
  }
};
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const token = cookieStore.get("accessToken")?.value || "";
  const user: UserBe = await fetchUserByToken(token);
  return (
    <html lang="en">
      <body className={inter.className}>
        <UserProvider user={user}>
          <ReactQueryProvider>
            {children}
            <Chatbot user={user} />
            <Toaster />
          </ReactQueryProvider>
        </UserProvider>
      </body>
    </html>
  );
}
